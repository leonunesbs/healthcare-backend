# Generated by Django 3.2.13 on 2022-04-26 23:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Colaborator',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='nome')),
                ('surname', models.CharField(
                    max_length=255, verbose_name='sobrenome')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('phone', models.CharField(max_length=255, verbose_name='telefone')),
                ('role', models.CharField(max_length=255, verbose_name='função')),
                ('user', models.OneToOneField(
                    on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'colaborador',
                'verbose_name_plural': 'colaboradores',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(
                    max_length=100, verbose_name='nome completo')),
                ('birth_date', models.DateField(verbose_name='data de nascimento')),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True,
                 max_length=20, null=True, verbose_name='telefone')),
                ('cpf', models.CharField(blank=True,
                 max_length=20, null=True, verbose_name='CPF')),
            ],
            options={
                'verbose_name': 'paciente',
                'verbose_name_plural': 'pacientes',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='nome da unidade',
                 max_length=100, verbose_name='nome')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='service name',
                 max_length=100, verbose_name='nome')),
                ('unit', models.ForeignKey(help_text='unidade',
                 on_delete=django.db.models.deletion.CASCADE, to='core.unit', verbose_name='unidade')),
                ('colaborators', models.ManyToManyField(blank=True, help_text='colaboradores',
                 related_name='services', to='core.Colaborator', verbose_name='colaboradores')),
            ],
            options={
                'verbose_name': 'service',
                'verbose_name_plural': 'services',
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='conteúdo')),
                ('created_at', models.DateTimeField(
                    auto_now_add=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(
                    auto_now=True, verbose_name='atualizado em')),
                ('colaborator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name='evaluations', to='core.colaborator', verbose_name='colaborador')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name='evaluations', to='core.patient', verbose_name='paciente')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name='evaluations', to='core.service', verbose_name='service')),
            ],
            options={
                'verbose_name': 'evolução',
                'verbose_name_plural': 'evoluções',
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='attachments/')),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name='attachments', to='core.evaluation', verbose_name='evolução')),
            ],
            options={
                'verbose_name': 'anexos',
                'verbose_name_plural': 'anexos',
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='conteúdo')),
                ('prescription_date', models.DateField(
                    verbose_name='prescription date')),
                ('created_at', models.DateTimeField(
                    auto_now_add=True, verbose_name='criado em')),
                ('colaborator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name='prescriptions', to='core.colaborator', verbose_name='colaborador')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name='prescriptions', to='core.patient', verbose_name='paciente')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name='prescriptions', to='core.service', verbose_name='prescription')),
            ],
        ),
    ]
